// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTankServer;

namespace NetTankServer.Migrations
{
    [DbContext(typeof(GameDbContext))]
    partial class GameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("NetTankServer.Models.PlayerEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("account");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("create_at");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("create_by");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime")
                        .HasColumnName("last_login_at");

                    b.Property<string>("Nickname")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nickname");

                    b.Property<string>("Password")
                        .HasColumnType("CHAR(64)")
                        .HasColumnName("password");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("update_at");

                    b.Property<long?>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("update_by");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Account" }, "ACCOUNT_UNIQUE")
                        .IsUnique();

                    b.ToTable("nt_player");
                });

            modelBuilder.Entity("NetTankServer.Models.PlayerTankEntity", b =>
                {
                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<long>("TankId")
                        .HasColumnType("bigint");

                    b.HasKey("PlayerId", "TankId");

                    b.ToTable("nt_player_tank");
                });

            modelBuilder.Entity("NetTankServer.Models.TankEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(767)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "NAME_UNIQUE")
                        .IsUnique();

                    b.ToTable("nt_tank");
                });
#pragma warning restore 612, 618
        }
    }
}
